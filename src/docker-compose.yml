version: "3"
services:
    frontend:
        build:
            context: ./frontend
        image: frontend
        container_name: frontend
        env_file:
            - .env
        volumes:
            - react-build:/app/dist
        networks:
            - iot-network

    nginx:
        build:
            context: ./build-nginx
        image: nginx
        container_name: nginx
        env_file:
            - .env
        depends_on:
            - frontend
            - backend
        ports:
            - $NGINX_PORT:$NGINX_PORT
        volumes:
            - ./build-nginx/default.conf.template:/etc/nginx/templates/default.conf.template
            - react-build:/usr/share/nginx/html
        networks:
            - iot-network

    db:
        container_name: db
        image: postgres:latest
        restart: always
        env_file:
            - .env
        environment:
            POSTGRES_USER: $PG_USER
            POSTGRES_PASSWORD: $PG_PASSWORD
            POSTGRES_DB: $PG_DB
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
            interval: 5s
            timeout: 5s
            retries: 5
        expose:
            - $PG_PORT:5432
        volumes:
            - iot-db:/var/lib/postgresql/data/
        networks:
            - iot-network

    backend:
        build:
            context: ./backend
        image: backend
        container_name: backend
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
        expose:
            - $BACK_PORT:$BACK_PORT
        networks:
            - iot-network

volumes:
    iot-db:
    react-build:

networks:
    iot-network:
        driver: bridge
